function C3Ddata = getResampledMarker_mod(C3Ddata,sync_c3d,sync_xpc)
%% getResampledMarker_mod
% Resample marker data (markerdata and analog signal)
% Required when the sample frequencies are noticeably different
% (e.g. XPC runs at 1000 Hz and the received signal at
% the VZ runs at 1028.8 Hz and markers at 102.88)
%
% INPUT)
% C3Ddata : data structure
% sync_c3d : random continuous sync signal recorded on the visualeyez
% sync_xpc : random continuous sync signal recorded (and generated by) the xpc
%
% OUTPUT)
% C3Ddata : data structure, in which the Marker field and the Analog field
% are resampled
%
% NOTES)
% Data is ONLY resampled during the duration of the xpc sync.
% Before and after that the data is left unedited.
%
% Samples are removed as equally spaced as possible

% Mark Vlutters - University of Twente - June 2015

%% Do stuff


%AnalVZ
[N,D]=rat(C3Ddata.Other.OtherFrameRate/C3Ddata.Analog.AnalogFrameRate);


C3Ddata.Analog.rawAnalogData=C3Ddata.Analog.AnalogData;
C3Ddata.Analog.rawAnalogFrameRate = C3Ddata.Analog.AnalogFrameRate;
C3Ddata.Analog.AnalogData=[];
%Avoid rippling in edges: article-> https://nl.mathworks.com/help/signal/examples/resampling-uniformly-sampled-signals.html
n = 5;%10 default
beta = 20;%5 default
[C3Ddata.Analog.AnalogData,bz] = resample(C3Ddata.Analog.rawAnalogData,N,D,n,beta);
%     figure
%     impz(bz)
C3Ddata.Analog.AnalogFrameRate= C3Ddata.Analog.AnalogFrameRate/D*N;

%MarkerVZ
factor = C3Ddata.Analog.rawAnalogFrameRate./C3Ddata.Marker.MarkerFrameRate;
C3Ddata.Marker.rawMarkerFrameRate = C3Ddata.Marker.MarkerFrameRate;
C3Ddata.Marker.MarkerFrameRate= C3Ddata.Other.OtherFrameRate/factor;
C3Ddata.Marker.rawMarkerData=C3Ddata.Marker.MarkerData;
C3Ddata.Marker.MarkerData=[];
[N,D]=rat( C3Ddata.Marker.MarkerFrameRate/C3Ddata.Marker.rawMarkerFrameRate);
for i=1:3 %apply in the 3 axes
    C3Ddata.Marker.MarkerData(:,:,i) = resample(C3Ddata.Marker.rawMarkerData(:,:,i),N,D);
end

C3Ddata.Marker.wasRe = true;

end